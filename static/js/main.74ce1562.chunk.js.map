{"version":3,"sources":["dataset.js","components/AnswersList.js","components/Answer.js","assets/img/no-profile.png","assets/img/地元の写真.jpg","components/Chat.js","components/Chats.js","components/Forms/TextImput.js","components/Forms/FormDialog.js","App.js","reportWebVitals.js","index.js"],"names":["defaultDataset","answers","content","nextId","question","AnswersList","props","className","map","value","index","select","toString","useStyles","makeStyles","createStyles","borderColor","color","fontWeight","marginBottom","backgroundColor","Answer","classes","Button","button","variant","onClick","_","Chat","isQuestion","type","ListItem","ListItemAvatar","Avatar","alt","src","地元の写真","NoProfile","text","height","padding","overflow","Chats","List","chats","id","chat","TextInput","TextField","fullWidth","label","margin","multiline","rows","onChange","FormDialog","useState","description","setDescription","email","setEmail","name","setName","inputDescription","useCallback","event","target","inputEmail","inputName","Dialog","open","onClose","handleClose","DialogTitle","DialogContent","DialogActions","isBlank","i","length","validateRequiredInput","isValidEmail","test","validateEmailFormat","alert","payload","fetch","method","body","JSON","stringify","then","App","setAnswers","setChats","currentId","setCurrentId","dataset","setDataset","setOpen","displayNextQuestion","nextQuestionId","nextDataset","addChats","prevChats","handleClickOpen","useEffect","initDataset","scrollArea","document","getElementById","scrollTop","scrollHeight","selectedAnswer","a","createElement","href","click","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.74ce1562.chunk.js","sourcesContent":["const defaultDataset = {\n    \"init\": {\n        answers: [\n            {content: \"退職理由を知りたい\", nextId: \"retire_reason\"},\n            {content: \"離職期間に何をしていたか知りたい\", nextId: \"turnover_period\"},\n            {content: \"なぜエンジニアになりたいのか\", nextId: \"engineer_reason\"},\n            {content: \"将来どのような働き方を実現したいのか\", nextId: \"career_vision\"},\n        ],\n        question: \"こんにちは！村田大樹です!こちらは転職活動における質問に答えるbotです。\",\n    },\n    // retire_reason(退職理由)\n    \"retire_reason\": {\n        answers: [\n            {content: \"人間関係でどのようなことがあったのか\", nextId: \"relationships\"},\n            {content: \"なぜそのような環境であることがわかったのか\", nextId: \"career\"},\n            {content: \"その他\", nextId: \"other_thing\"}\n        ],\n        question: \"人間関係と思っていたキャリアを形成できない環境だったからです。\",\n    },\n    \"relationships\": {\n        answers: [\n            {content: \"なぜキャリアを形成できない環境であることがわかったのか\", nextId: \"career\"},\n            {content: \"問い合わせる\", nextId: \"contact\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"やってもいない禁止事項をやっていたと虚偽の報告をされ、毎日ありもしないことで謝罪させられてました。例えば、勤務時間はスマホの電源を必ず落としているのに「スマホで遊んでいた」と本社に報告されて、意見も聞いてもらえずに謝罪していました。「監視カメラに映っていた」と言われたので「身に覚えが全くないので映像を見せてください」とお願いしても断られました。このまま謝り続けると、本当にミスをしてしまった時に何が悪いのかわからないまま謝ってしまう人間になってしまうと思ったので転職を希望しました。\",\n    },\n    \"career\": {\n        answers: [\n            {content: \"人間関係でどのようなことがあったのか\", nextId: \"relationships\"},\n            {content: \"問い合わせる\", nextId: \"contact\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"前回所属していた会社ではプログラマとして入社したのですが、実際入社したら全く違う業種に配属されてしまいました。そこで、プログラミングを独学しポートフォリオやオリジナルのアプリを作ってプログラマとして働かせて欲しいとお願いしました。その結果「あなたをプログラマとして働かせる気はこの先ありません」と門前払いされたので、そこで転職をしようと決意しました。\",\n    },\n    \"other_thing\": {\n        answers: [\n            {content: \"問い合わせる\", nextId: \"contact\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"その他についてですね。コチラからお問い合わせできます。\",\n    },\n    // turnover_period(離職期間)\n    \"turnover_period\": {\n        answers: [\n            {content: \"どのようなプログラミングの勉強をしているのか\", nextId: \"programing_study\"},\n            {content: \"転職活動の流れ\", nextId: \"job_transfer\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"仕事、プログラミングの勉強、転職活動を行なっていました。\",\n    },\n    \"programing_study\": {\n        answers: [\n            {content: \"ポートフォリオを見る\", nextId: \"https://nostalgic-hypatia-84e39a.netlify.app/\"},\n            {content: \"転職活動の流れ\", nextId: \"job_transfer\"},\n            {content: \"問い合わせる\", nextId: \"contact\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"半年間プログラミングスクールで勉強をし、現在は独学でReactやfirebaseを勉強しております。1日2時間ほど勉強しています。\",\n    },\n    \"job_transfer\": {\n        answers: [\n            {content: \"どのようなプログラミングの勉強をしているのか\", nextId: \"programing_study\"},\n            {content: \"問い合わせる\", nextId: \"contact\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"エージェントに登録して転職活動をしていたのですが、希望があまりにも高くしすぎたため2ヶ月間書類が通りませんでした。このままではいけないと思い、そこから現在は自ら起こしつつエージェントを利用しながら転職活動を行なっています。\",\n    },\n    // engineer_reason(なぜエンジニア)\n    \"engineer_reason\": {\n        answers: [\n            {content: \"問い合わせる\", nextId: \"contact\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"表現したいコードをエディタに正しく書きさえすればその通りに実装できるからです。学生時代と前職では微生物に関する研究や仕事をしていたのですが、微生物の世界ではマニュアル通りに行動しても「行った環境がたまたま適していなかった」「微生物にたまたま元気がなかった」、ひどい時には「どうしても原因がわからない」という理由でやり直しすることがあります。一方でプログラミングは「PCに元気がないから実装できない」「今日は暑いから実装できない」などといったことがなく、100%自分の書いたコードに原因があるのでそこに魅了されてITエンジニアになりたいと思いました。\",\n    },\n    // 将来どのような働き方\n    \"career_vision\": {\n        answers: [\n            {content: \"会社に所属するパターン\", nextId: \"career_step\"},\n            {content: \"フリーランスパターン\", nextId: \"freelance\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"会社に所属しながら色々な経験を積む、あるいはフリーランスとして働きたいと考えております。\",\n    },\n    \"career_step\": {\n        answers: [\n            {content: \"フリーランスパターン\", nextId: \"freelance\"},\n            {content: \"問い合わせる\", nextId: \"contact\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"プログラマ、システムエンジニア、プロジェクトリーダー、プロジェクトマネージャーを経験していきたいと考えております。そして、培った能力を動画やどこかの学校で情報発信していきたいと考えております。\",\n    },\n    \"freelance\": {\n        answers: [\n            {content: \"会社に所属するパターン\", nextId: \"career_step\"},\n            {content: \"問い合わせる\", nextId: \"contact\"},\n            {content: \"最初の質問に戻る\", nextId: \"init\"}\n        ],\n        question: \"プログラマ、システムエンジニアを経験し、フリーランスとして場所を選ばずに働きたいと考えております。\",\n    }\n}\n\nexport default defaultDataset","import React from 'react'\nimport { Answer } from './index'\n\nconst AnswersList = (props) => {\n    return(\n        <div className='c-grid__answer'>\n            {props.answers.map((value, index) =>{\n                return  <Answer content={value.content} nextId={value.nextId} key={index.toString()} select={props.select}/> \n            })}  \n        </div>\n    )\n}\n\nexport default AnswersList","import React from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(() => (\n    createStyles({\n        'button': {\n            borderColor: '#FFB549',\n            color: '#FFB549',\n            fontWeight: 600,\n            marginBottom: '8px',\n            '&:hover': {\n                backgroundColor: '#FFB549',\n                color: 'white'\n            }\n        }\n    })  \n  ));\n\nconst Answer = (props) => {\n    const classes = useStyles();\n\n    return(\n         <Button\n         className={classes.button}\n         variant=\"outlined\"  onClick={() => {props.select(props.content ,props.nextId)}}>\n             {props.content}\n        </Button>\n    )\n}\n\nexport default Answer","export default __webpack_public_path__ + \"static/media/no-profile.d6a64ff8.png\";","export default __webpack_public_path__ + \"static/media/地元の写真.329fcc60.jpg\";","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport NoProfile from '../assets/img/no-profile.png'\nimport 地元の写真 from '../assets/img/地元の写真.jpg'\n\nconst Chat = (props) => {\n    const isQuestion = (props.type === 'question')\n    const classes = isQuestion ? 'p-chat__row': 'p-chat__reverse' \n    \n    return (\n    <ListItem className={classes}>\n        <ListItemAvatar>\n            {isQuestion ? (\n                <Avatar alt=\"icon\" src={地元の写真} />\n            ) : (\n                <Avatar alt=\"icon\" src={NoProfile} />\n            )}\n        </ListItemAvatar>\n        <div className='p-chat__bubble'>{props.text}</div>\n    </ListItem>\n    )\n}\n\nexport default Chat","import React from 'react'\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport {Chat} from './index';\n\n\n\nconst useStyles =makeStyles(() => (\n    createStyles({\n        'chats': {\n           height: 400,\n           padding: 0,\n           overflow: 'auto',\n           \n        }\n    })  \n  ));\n\nconst Chats = (props) => {\n    const classes = useStyles()\n\n    return(\n        <List className={classes.chats} id={'scroll-area'}>\n           {props.chats.map((chat,index) => {\n               return <Chat text={chat.text} type={chat.type} key={index.toString()} />\n           })}\n        </List> \n    )\n}\n\nexport default Chats","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\n\n\nconst TextInput = (props) => {\n    return(\n        <TextField \n            fullWidth={true}\n            label={props.label} \n            margin={'dense'}\n            multiline={props.multiline}\n            rows={props.rows}\n            value={props.value}\n            type={props.type}\n            onChange={props.onChange}\n        />\n    )\n}\n\nexport default TextInput","import React,{useState, useCallback} from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextInput from './TextImput';\n\n\nconst FormDialog = (props) => {\n    const [description, setDescription] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [name, setName] = useState(\"\");\n\n    const inputDescription = useCallback((event) => {\n        setDescription(event.target.value)\n    },[setDescription]);\n\n    const inputEmail = useCallback((event) => {\n        setEmail(event.target.value)\n    },[setEmail]);\n\n    const inputName = useCallback((event) => {\n        setName(event.target.value)\n    },[setName]);\n\n    const validateEmailFormat = (email) => {\n        const regex = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n        return regex.test(email)\n    }\n\n    const validateRequiredInput = (...args) => {\n        let isBlank = false;\n        for (let i = 0; i < args.length; i=(i+1)|0) {\n            if (args[i] === \"\") {\n                isBlank = true;\n            }\n        }\n        return isBlank\n    };\n\n    // Slackに問い合わせがあったことを通知する\n    const submitForm = () => {\n        const isBlank = validateRequiredInput(name, email, description)\n        const isValidEmail = validateEmailFormat(email)\n\n        if (isBlank) {\n            alert('必須入力欄が空白です。')\n            return false\n        } else if (!isValidEmail) {\n            alert('メールアドレスの書式が異なります。')\n            return false\n        } else {\n            const payload = {\n                text: 'お問い合わせがありました\\n'\n                    + 'お名前: ' + name + '\\n'\n                    + 'メールアドレス: ' + email + '\\n'\n                    + '【問い合わせ内容】\\n' + description\n            };\n\n            const url = 'https://hooks.slack.com/services/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'\n\n            // fetchメソッドでフォームの内容をSlackのIncoming Webhook URL に送信する\n            fetch(url, {\n                method: 'POST',\n                body: JSON.stringify(payload)\n            }).then(() => {\n                alert('送信が完了しました。追ってご連絡いたします🙌');\n                setDescription(\"\")\n                setEmail(\"\")\n                setName(\"\")\n                return props.handleClose()\n            })\n        }\n    };\n\n    return (\n        <Dialog open={props.open} onClose={props.handleClose}>\n            <DialogTitle>お問い合わせフォーム</DialogTitle>\n            <DialogContent>\n                <TextInput\n                    label={\"名前(必須)\"} multiline={false} rows={1}\n                    value={name} type={\"text\"} onChange={inputName}\n                />\n                <TextInput\n                    label={\"メールアドレス(必須)\"} multiline={false} rows={1}\n                    value={email} type={\"email\"} onChange={inputEmail}\n                />\n                <TextInput\n                    label={\"お問い合わせ内容(必須)\"} multiline={true} rows={5}\n                    value={description} type={\"text\"} onChange={inputDescription}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.handleClose} color=\"primary\">\n                    キャンセル\n                </Button>\n                <Button onClick={submitForm} color=\"primary\">\n                    送信する\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n\n}\n\nexport default FormDialog\n","import React, {useState, useEffect, useCallback} from 'react';\nimport defaultDataset from './dataset.js';\nimport './assets/styles/style.css'\nimport { AnswersList,Chats } from './components/index';\nimport FormDialog from './components/Forms/FormDialog';\n\n\nconst App = () => {\n  const [answers, setAnswers] = useState([])\n  const [chats, setChats] = useState([])\n  const [currentId, setCurrentId] = useState('init')\n  const [dataset, setDataset] = useState(defaultDataset)\n  const [open, setOpen] = useState(false)\n  \n  \n  const displayNextQuestion = (nextQuestionId, nextDataset) => {\n    addChats({\n        text: nextDataset.question,\n        type: 'question'\n    });\n \n    setAnswers(nextDataset.answers)\n    setCurrentId(nextQuestionId)\n}\n \nconst selectAnswer = (selectedAnswer, nextQuestionId) => {\n  switch(true) {\n    case(nextQuestionId === 'contact'):\n      handleClickOpen()\n    break;\n    \n      // リンクの飛ばし先\n    case(/^https:*/.test(nextQuestionId)):\n        const a = document.createElement('a') \n        a.href = nextQuestionId\n        a.target = '_blank'\n        a.click()\n      break;\n\n    default:\n      addChats({\n        type: 'answer',\n        text: selectedAnswer\n      })\n\n      setTimeout(() => displayNextQuestion(nextQuestionId, dataset[nextQuestionId]), 1000 )\n      break;\n  }\n  }\n\n  const addChats = (chat) => {\n      setChats(prevChats => {\n        return[...prevChats, chat]\n      })\n  }\n\n const handleClickOpen = () => {\n      setOpen(true) \n  };\n\n const handleClose = useCallback(() => {\n     setOpen(false) \n  }, [setOpen]);\n\n  useEffect (() => { \n    const initDataset = defaultDataset\n\n    displayNextQuestion(currentId, initDataset[currentId])\n    setDataset(initDataset)\n  },[]) \n\n  useEffect(() => { \n    const scrollArea = document.getElementById('scroll-area')\n    if(scrollArea) {\n        scrollArea.scrollTop = scrollArea.scrollHeight\n    }\n  })\n\n  \n    return (\n      <section className='c-section'>\n        <div className='c-box'>\n          <Chats chats={chats}/>\n          <AnswersList answers={answers} select={selectAnswer}/>\n          <FormDialog open={open} handleClose={handleClose} />\n        </div>\n      </section>\n    );\n  \n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/styles/style.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}